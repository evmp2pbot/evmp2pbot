name: Deploy

on: [push]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT }}
  GCP_VM_NAME: ${{ secrets.GCP_VM_NAME }}
  GCP_ZONE: us-central1
  ENVIRONMENT_NAME: ${{ (github.ref_name != 'master' && github.ref_name != 'main') && github.ref_name || 'production' }}
  IMAGE: ${{ github.event.repository.name }}${{ (github.ref_name != 'master' && github.ref_name != 'main') && format('-{0}', github.ref_name) || '' }}

jobs:
  main:
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get commit hash
        id: vars
        shell: bash
        run: |
          TAG="$(git rev-parse HEAD)-$GITHUB_SHA"
          echo "::set-output name=tag::$TAG"
          echo "::set-output name=repo_url_full::$GCP_ZONE-docker.pkg.dev/$PROJECT_ID/$IMAGE/$IMAGE-$ENVIRONMENT_NAME:$TAG"

      - uses: google-github-actions/setup-gcloud@v1

      - id: "Auth"
        uses: "google-github-actions/auth@v2"
        with:
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ secrets.GCP_PROJECT }}

      # Build the Docker image
      - name: Build
        env:
          TAG: ${{ steps.vars.outputs.tag }}
          REPO_URL_FULL: ${{ steps.vars.outputs.repo_url_full }}
        run: |-
          docker build \
            --tag "$REPO_URL_FULL" \
            .

      # Push the Docker image to Google Container Registry
      - name: Publish
        env:
          TAG: ${{ steps.vars.outputs.tag }}
          REPO_URL_FULL: ${{ steps.vars.outputs.repo_url_full }}
        run: |-
          gcloud auth --quiet configure-docker $GCP_ZONE-docker.pkg.dev --project $PROJECT_ID
          docker push "$REPO_URL_FULL"
          gcloud compute instances update-container "$GCP_VM_NAME" --container-image "$REPO_URL_FULL"

